<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="concept _Skins_EBFD_Side_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-toc-path="Integrating with outside sources|Creating Platform objects from OpenEdge Object Services|Creating an application from OpenEdge data" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="Expires" content="0" />
        <meta http-equiv="Pragma" content="no-cache" />
        <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png" /><title>Enabling support for filtering options and sorting</title>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/stylesheets/print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../resources/branding/branding.css" rel="stylesheet" type="text/css" />
        <link href="../xebresources/stylesheets/eb-styles.css" rel="stylesheet" type="text/css" />
        <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png" />
        <script src="../resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1200px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../communications/everbridge360.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <p>
                                        <script type="text/javascript">/*<![CDATA[*/ $(window).resize(function() {
				var winWidth = $(window).width();
				if (winWidth > 1279) {
				console.log('appendTo >1279');
				$("#header-links").appendTo("div.logo-wrapper");
				} else {
				console.log('appendTo <1279');
				$("#header-links").appendTo("#offCanvas .off-canvas-accordion");
				}
			});/*]]>*/</script>
                                        <script>/* <![CDATA[ */
				$( document ).ready(function() {
				$('.MCTopicPopupHotSpot').removeClass('MCTopic').addClass('MCTopicPopup');
				});

				if (window.self != window.top) {
				// topnav
				$('div.title-bar-container').css('display','none');

				// sidenav
				$('nav.sidenav-wrapper').css('display','none');
				
				// topicnav
				$('div.topicnav-wrapper').css('display','none');
	
				// tablet+phone
				$('nav.title-bar').css('display','none');
 
				$('a').attr('target','_parent');
				}
			/* ]]> */</script>
                                    </p>
                                    <div class="nocontent">
                                        <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                        </div>
                                    </div>
                                    <div class="Responsive-8-4">
                                        <div class="body-box">
                                            <div role="main" id="mc-main-content">
                                                <h1 class="concepttitle" id="Enablingsupportforfilteringoptionsandsorting" data-magellan-target="Enablingsupportforfilteringoptionsandsorting">Enabling support for filtering options and sorting</h1>
                                                <p>This topic describes how to enable support for filtering options and sorting in
            OpenEdge.</p>
                                                <p>In OpenEdge, you create one or more Business Entities as Data Object
            resources and generate your Data Service Catalog when you create the Data Object Service
            from these resources. A Business Entity is an ABL class or procedure object that
            implements a service interface that provides client access to data and business logic
            running on an OpenEdge application server. In Platform, you use the Data Service Catalog
            to create Platform external objects associated with OpenEdge Data Objects. You can
            enable support for filtering options and sorting by enhancing the Business Entity to
            accept a JSON object (JSON Filter Pattern) as a filter parameter. </p>
                                                <p>This section describes what you must include in your Business Entity to enable
            sorting and filtering options in Platform.</p>
                                                <p>To support sorting and filtering, you must ensure that your Business Entity and
            the associated include file (<span class="filepath">.i</span>) with the schema has
            support for the parameters that are contained in the JSON object:<ul><li><code>ablfilter</code> — Supports filtering
                    of records</li><li><code>id</code> — Supports search by ID</li><li><code>top</code> and <code>skip</code> — Supports paging</li><li><code>orderby</code> — Supports sorting and
                    grouping of records</li></ul></p>
                                                <p>In the include file, the temp-table definitions include the fields <b>id</b> and sequence (<b>seq</b>) to support JSON
                filter:<ul><li> The <span class="uicontrol">id</span> field is used to
                    support the <code>id</code> parameter in the JSON filter. </li><li>The <span class="uicontrol">seq</span> field is used to
                    support the <code>orderby</code> parameter in the JSON
                    filter.</li></ul>The Read operation method method contains the code to process the JSON filter and
            return the corresponding records. The code uses the JSON classes in ABL to process the
            JSON filter. The ABL code implements the logic to handle each parameter. An <code>AFTER-ROW-FILL</code> method callback is used to populate the
            values of the <span class="uicontrol">id</span> and <span class="uicontrol">seq</span> fields. The local variable <code>iSeq</code> is
            used to obtain the values for the <span class="uicontrol">seq</span> field.
                <div class="note"><b>Note: </b>When you use the following code samples, verify that the
                formatting of the code is maintained. Alternatively, you can download the code
                samples from a <a target="_blank" href="https://community.progress.com/technicalusers/w/rollbase/2156.accessing-the-openedge-appserver-from-rollbase.aspx"><span class="mc-variable IB.CompanyName variable">Infinite Blue</span> Community page</a>.</div></p>
                                                <p>The following sample include file (<span class="filepath">customer.i</span>) illustrates a temp-table definition with
                <span class="uicontrol">id</span> and <span class="uicontrol">seq</span> fields:</p><pre>/*------------------------------------------------------------------------
   File         : customer.i
   Purpose      :
   Syntax       : 
   Description  :
   Author(s)    : 
   Created      : 
   Notes        : 
 ----------------------------------------------------------------------*/
  
/* ***************************  Definitions  ************************** */
  
/* ********************  Preprocessor Definitions  ******************** */
  
/* ***************************  Main Block  *************************** */
  
/** Dynamically generated schema file **/
   
@openapi.openedge.entity.primarykey (fields="CustNum").
DEFINE TEMP-TABLE ttCustomer BEFORE-TABLE bttCustomer
FIELD id            AS CHARACTER
FIELD seq           AS INTEGER      INITIAL ?
FIELD CustNum       AS INTEGER      INITIAL "0" LABEL "Cust Num"
FIELD Name          AS CHARACTER    LABEL "Name"
FIELD Address       AS CHARACTER    LABEL "Address"
FIELD Address2      AS CHARACTER    LABEL "Address2"
FIELD Balance       AS DECIMAL      INITIAL "0" LABEL "Balance"
FIELD City          AS CHARACTER    LABEL "City"
FIELD Comments      AS CHARACTER    LABEL "Comments"
FIELD Contact       AS CHARACTER    LABEL "Contact"
FIELD Country       AS CHARACTER    INITIAL "USA" LABEL "Country"
FIELD CreditLimit   AS DECIMAL      INITIAL "1500" LABEL "Credit Limit"
FIELD Discount      AS INTEGER      INITIAL "0" LABEL "Discount"
FIELD EmailAddress  AS CHARACTER    LABEL "Email"
FIELD Fax           AS CHARACTER    LABEL "Fax"
FIELD Phone         AS CHARACTER    LABEL "Phone"
FIELD PostalCode    AS CHARACTER    LABEL "Postal Code"
FIELD SalesRep      AS CHARACTER    LABEL "Sales Rep"
FIELD State         AS CHARACTER    LABEL "State"
FIELD Terms         AS CHARACTER    INITIAL "Net30" LABEL "Terms"
INDEX seq seq
.

DEFINE DATASET dsCustomer FOR ttCustomer.
</pre>
                                                <p>In the OpenEdge Business Entity, the code to process the JSON Filter Pattern is
            called from the <code>read</code> method and replaces the generated
            code for the <code>read</code> method as well as the private <code>applyFillMethod()</code> method. </p>
                                                <p>The following business entity code from OpenEdge illustrates how to process the
            JSON Filter Pattern and enable filtering and sorting:</p><pre>/*------------------------------------------------------------------------
    File        : Customer.cls
    Syntax      : 
    Author(s)   : 
    Created     : 
    Notes       : 
  ----------------------------------------------------------------------*/
    
@program FILE(name="Customer.cls", module="AppServer").
@openapi.openedge.export FILE(type="REST", executionMode="singleton", useReturnValue="false", writeDataSetBeforeImage="false").
@Progress.service.resource FILE(name="Customer", URI="/Customer", schemaName="dsCustomer", schemaFile="").

USING Progress.Lang.*.
USING Progress.Json.ObjectModel.*.


BLOCK-LEVEL ON ERROR UNDO, THROW. 

CLASS Customer:

    /*------------------------------------------------------------------------------
            Purpose:                                                                      
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
     
    {"customer.i"}
                    
    DEFINE DATA-SOURCE srcCustomer  FOR Customer.
    DEFINE VARIABLE iSeq            AS INTEGER      NO-UNDO.    
    
    
    /*------------------------------------------------------------------------------
            Purpose:  Get one or more records, based on a filter string                                                                     
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
    @openapi.openedge.export(type="REST", useReturnValue="false", writeDataSetBeforeImage="false").
    @Progress.service.resourceMapping(type="REST", operation="read", URI="?filter=~{filter~}", alias="", mediaType="application/json"). 
    METHOD PUBLIC VOID ReadCustomer(
            INPUT filter AS CHARACTER, 
            OUTPUT DATASET dsCustomer):

        DEFINE VARIABLE jsonParser     AS ObjectModelParser         NO-UNDO.
        DEFINE VARIABLE jsonObject     AS JsonObject                NO-UNDO.
        DEFINE VARIABLE cWhere         AS CHARACTER                 NO-UNDO.        

        DEFINE VARIABLE hQuery         AS HANDLE                    NO-UNDO.
        DEFINE VARIABLE lUseReposition AS LOGICAL                   NO-UNDO.        
        DEFINE VARIABLE iCount         AS INTEGER                   NO-UNDO.
        
        DEFINE VARIABLE ablFilter      AS CHARACTER                 NO-UNDO.
        DEFINE VARIABLE id             AS CHARACTER INITIAL ?       NO-UNDO.
        DEFINE VARIABLE iMaxRows       AS INTEGER   INITIAL ?       NO-UNDO.
        DEFINE VARIABLE iSkipRows      AS INTEGER   INITIAL ?       NO-UNDO.        
        DEFINE VARIABLE cOrderBy       AS CHARACTER INITIAL ""      NO-UNDO.                     
        
        /* The filter parameter can be:
            - a WHERE clause: if it begins with WHERE
            - a JSON object representing a query if it begins with { 
            - a free form filter specific to the business entity
        */

        MESSAGE "DEBUG: " filter.

        /* get rid of any existing data */
        EMPTY TEMP-TABLE ttCustomer.
        iSeq = 0.
                               
        IF filter BEGINS "WHERE " THEN
            cWhere = filter.
        ELSE IF filter BEGINS "~{" THEN 
        DO:        
            jsonParser  = NEW ObjectModelParser().
            jsonObject  = CAST(jsonParser:Parse(filter), jsonObject).
            iMaxRows    = jsonObject:GetInteger("top")  NO-ERROR.            
            iSkipRows   = jsonObject:GetInteger("skip") NO-ERROR.
            ablFilter   = jsonObject:GetCharacter("ablFilter") NO-ERROR.
            id          = jsonObject:GetCharacter("id") NO-ERROR.
            cOrderBy    = jsonObject:GetCharacter("orderBy") NO-ERROR.               
            cWhere      = "WHERE " + ablFilter.
            
            IF cOrderBy &gt; "" THEN
            DO:                                
                cOrderBy = REPLACE(cOrderBy, ",", " by ").
                cOrderBy = "by " + cOrderBy + " ".                
                /* NOTE: id and seq fields should be removed from cWhere and cOrderBy */                
                cOrderBy = REPLACE(cOrderBy, "by id desc", "").
                cOrderBy = REPLACE(cOrderBy, "by id ", "").
                cOrderBy = REPLACE(cOrderBy, "by seq desc", "").
                cOrderBy = REPLACE(cOrderBy, "by seq ", "").
            END.                
            
            lUseReposition = iSkipRows &lt;&gt; ?.                                                 
        END.
        ELSE IF filter NE "" THEN
        DO:
            /* Use filter as WHERE clause */
            cWhere = "WHERE " + filter.            
        END.                                
                
        IF iMaxRows &lt;&gt; ? AND iMaxRows &gt; 0 THEN
        DO:
            BUFFER ttCustomer:HANDLE:BATCH-SIZE = iMaxRows.
        END.
        ELSE DO:
        IF id &gt; "" THEN
            BUFFER ttCustomer:HANDLE:BATCH-SIZE = 1.
        ELSE                                 
            BUFFER ttCustomer:HANDLE:BATCH-SIZE = 0.
        END.                        
        BUFFER ttCustomer:ATTACH-DATA-SOURCE(DATA-SOURCE srcCustomer:HANDLE).

        IF cOrderBy = ? THEN cOrderBy = "".
        cWhere = IF cWhere &gt; "" THEN (cWhere + " " + cOrderBy) ELSE ("WHERE " + cOrderBy).                     
        MESSAGE "DEBUG: cWhere: " cWhere.
        MESSAGE "DEBUG: cOrderBy: " cOrderBy.        
        DATA-SOURCE srcCustomer:FILL-WHERE-STRING = cWhere.
            
        IF lUseReposition THEN
        DO:
            hQuery = DATA-SOURCE srcCustomer:QUERY.
            hQuery:QUERY-OPEN.
            IF id &gt; "" AND id &lt;&gt; "?" THEN
            DO:
                hQuery:REPOSITION-TO-ROWID(TO-ROWID(id)).                
            END.                 
            ELSE IF iSkipRows &lt;&gt; ? AND iSkipRows &gt; 0 THEN
            DO:
                hQuery:REPOSITION-TO-ROW(iSkipRows).
                IF NOT AVAILABLE Customer THEN
                    hQuery:GET-NEXT () NO-ERROR.                
            END.                
            iCount = 0.                
            REPEAT WHILE NOT hQuery:QUERY-OFF-END AND iCount &lt; iMaxRows:
                hQuery:GET-NEXT () NO-ERROR.
                IF AVAILABLE Customer THEN
                DO:
                    CREATE ttCustomer.
                    BUFFER-COPY Customer TO ttCustomer.
                    ASSIGN  ttCustomer.id  = STRING(ROWID(Customer))
                            iSeq = iSeq + 1
                            ttCustomer.seq = iSeq.              
                END.   
                iCount = iCount + 1.                 
            END.                                 
        END.
        ELSE DO:
            IF id &gt; "" THEN DATA-SOURCE srcCustomer:RESTART-ROWID(1) = TO-ROWID ((id)).            
            BUFFER ttCustomer:SET-CALLBACK ("AFTER-ROW-FILL", "AddIdField").                                             
            DATASET dsCustomer:FILL().
        END.            
        FINALLY:
            BUFFER ttCustomer:DETACH-DATA-SOURCE().
        END FINALLY.                
       
    END METHOD.
            
    METHOD PUBLIC VOID AddIdField (INPUT DATASET dsCustomer):        
        ASSIGN  ttCustomer.id = STRING(ROWID(Customer))
                iSeq = iSeq + 1
                ttCustomer.seq = iSeq.        
    END.                                  
      
    /*------------------------------------------------------------------------------
            Purpose: Create one or more new records                                                               
            Notes:                                                                        
    ------------------------------------------------------------------------------*/  
    @openapi.openedge.export(type="REST", useReturnValue="false", writeDataSetBeforeImage="false").
    @progress.service.resourceMapping(type="REST", operation="create", URI="", alias="", mediaType="application/json").
    METHOD PUBLIC VOID CreateCustomer(INPUT-OUTPUT DATASET dsCustomer):         
    
        THIS-OBJECT:CommitCustomer(INPUT "", INPUT ROW-CREATED).        
        RETURN.        
    END METHOD.    
    
    /*------------------------------------------------------------------------------
            Purpose:  Update one or more records                                                                  
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
    @openapi.openedge.export(type="REST", useReturnValue="false", writeDataSetBeforeImage="false").
    @progress.service.resourceMapping(type="REST", operation="update", URI="", alias="", mediaType="application/json").
    METHOD PUBLIC VOID UpdateCustomer(INPUT-OUTPUT DATASET dsCustomer):         
    
        THIS-OBJECT:CommitCustomer(INPUT "", INPUT ROW-MODIFIED).
                  
    END METHOD.
    
    /*------------------------------------------------------------------------------
            Purpose:    Delete a record                                                               
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
    @openapi.openedge.export(type="REST", useReturnValue="false", writeDataSetBeforeImage="false").
    @progress.service.resourceMapping(type="REST", operation="delete", URI="", alias="", mediaType="application/json").
    METHOD PUBLIC VOID DeleteCustomer(INPUT-OUTPUT DATASET dsCustomer):                    
    
        THIS-OBJECT:CommitCustomer(INPUT "", INPUT ROW-DELETED).
         
    END METHOD.
     
    /*------------------------------------------------------------------------------
            Purpose:  generic routine for creating/updating/deleting customers                                                                    
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID commitCustomer(
                    INPUT pcFieldMapping AS CHARACTER,
                    INPUT piRowState AS INTEGER ):
        DEFINE VARIABLE Skip-list AS CHAR NO-UNDO.
        BUFFER ttCustomer:ATTACH-DATA-SOURCE (DATA-SOURCE srcCustomer:HANDLE,
                                             pcFieldMapping).
        FOR EACH ttCustomer.
            BUFFER ttCustomer:MARK-ROW-STATE (piRowState). 
        END.
        IF piRowState = ROW-CREATED THEN
            Skip-list  = "CustNum".
        FOR EACH bttCustomer:
            BUFFER bttCustomer:SAVE-ROW-CHANGES(1, Skip-list).
        END.
        FINALLY:
            BUFFER ttCustomer:DETACH-DATA-SOURCE().
            RETURN.
        END FINALLY.
    END METHOD.
              
END CLASS.
</pre>
                                                <p>In a Business Entity from the latest release of OpenEdge, you can enable
            filtering and sorting by replacing the code in the <code>Read</code>
            method with the code that processes the JSON filter in a similar way to the above code,
            which continues to work in OpenEdge 11.3 or greater. </p>
                                                <p>The following are additional annotations required for this use case in OpenEdge
		    11.5.1 and 11.6. They must be added manually. </p><pre>@openapi.openedge.method.property(name="mappingType", value="JFP"). 
@openapi.openedge.method.property (name="capabilities", value="ablFilter,top,skip,id,orderBy").</pre>
                                                <div class="note"><b>Note: </b>The <code>ablFilter</code> parameter is considered to always be
                supported and does not need to be listed in the values for the <code>capabilities</code> property.</div>
                                                <p>The following is a Business Entity class file from OpenEdge that contains the
            code to process the JSON Filter Pattern:</p><pre> /*------------------------------------------------------------------------
    File        : Customer.cls
    Syntax      : 
    Author(s)   : 
    Created     : 
    Notes       : 
  ----------------------------------------------------------------------*/
    
@program FILE(name="Customer.cls", module="AppServer").
@openapi.openedge.export FILE(type="REST", executionMode="singleton", useReturnValue="false", writeDataSetBeforeImage="false").
@progress.service.resource FILE(name="Customer", URI="/Customer", schemaName="dsCustomer", schemaFile="Test/AppServer/customer.i").

USING OpenEdge.BusinessLogic.BusinessEntity.
USING Progress.Lang.*.
USING Progress.Json.ObjectModel.*.

BLOCK-LEVEL ON ERROR UNDO, THROW.

CLASS Customer INHERITS BusinessEntity:

    /*------------------------------------------------------------------------------
            Purpose:                                                                      
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
     
    {"customer.i"}
                    
    DEFINE DATA-SOURCE srcCustomer FOR sports2000.Customer.
    DEFINE VARIABLE iSeq            AS INTEGER      NO-UNDO.           
    
    
     
    /*------------------------------------------------------------------------------
            Purpose:                                                                      
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
    CONSTRUCTOR PUBLIC Customer():
        
        DEFINE VAR hDataSourceArray AS HANDLE NO-UNDO EXTENT 1.
        DEFINE VAR cSkipListArray AS CHAR NO-UNDO EXTENT 1.
        
        SUPER (DATASET dsCustomer:HANDLE).
        
        /* Data Source for each table in dataset. Should be in table order as defined 
           in DataSet */
            
        hDataSourceArray[1] =  DATA-SOURCE srcCustomer:HANDLE.
        
        
        /* Skip-list entry for each table in dataset. Should be in temp-table order 
           as defined in DataSet */
        /* Each skip-list entry is a comma-separated list of field names, to be
           ignored in create stmt */
            
        cSkipListArray[1] = "CustNum".
        
        
        THIS-OBJECT:ProDataSource = hDataSourceArray.
        THIS-OBJECT:SkipList = cSkipListArray.
                
    END CONSTRUCTOR.
    
    
    
    /*------------------------------------------------------------------------------
            Purpose:  Get one or more records, based on a filter string                                                                     
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
    @openapi.openedge.export(type="REST", useReturnValue="false", writeDataSetBeforeImage="true").
    @progress.service.resourceMapping(type="REST", operation="read", URI="?filter=~{filter~}", alias="", mediaType="application/json").
    @openapi.openedge.method.property (name="capabilities", value="top,skip,id,orderBy"). 
    METHOD PUBLIC VOID ReadCustomer(
            INPUT filter AS CHARACTER, 
            OUTPUT DATASET dsCustomer):
        
        DEFINE VARIABLE jsonParser     AS ObjectModelParser         NO-UNDO.
        DEFINE VARIABLE jsonObject     AS JsonObject                NO-UNDO.
        DEFINE VARIABLE cWhere         AS CHARACTER                 NO-UNDO.        

        DEFINE VARIABLE hQuery         AS HANDLE                    NO-UNDO.
        DEFINE VARIABLE lUseReposition AS LOGICAL                   NO-UNDO.        
        DEFINE VARIABLE iCount         AS INTEGER                   NO-UNDO.
        
        DEFINE VARIABLE ablFilter      AS CHARACTER                 NO-UNDO.
        DEFINE VARIABLE id             AS CHARACTER INITIAL ?       NO-UNDO.
        DEFINE VARIABLE iMaxRows       AS INTEGER   INITIAL ?       NO-UNDO.
        DEFINE VARIABLE iSkipRows      AS INTEGER   INITIAL ?       NO-UNDO.        
        DEFINE VARIABLE cOrderBy       AS CHARACTER INITIAL ""      NO-UNDO.                     
        
        /* The filter parameter can be:
            - a WHERE clause: if it begins with WHERE
            - a JSON object representing a query if it begins with { 
            - a free form filter specific to the business entity
        */

        MESSAGE "DEBUG: " filter.

        /* get rid of any existing data */
        EMPTY TEMP-TABLE ttCustomer.
        iSeq = 0.
                               
        IF filter BEGINS "WHERE " THEN
            cWhere = filter.
        ELSE IF filter BEGINS "~{" THEN 
        DO:        
            jsonParser  = NEW ObjectModelParser().
            jsonObject  = CAST(jsonParser:Parse(filter), jsonObject).
            iMaxRows    = jsonObject:GetInteger("top")  NO-ERROR.            
            iSkipRows   = jsonObject:GetInteger("skip") NO-ERROR.
            ablFilter   = jsonObject:GetCharacter("ablFilter") NO-ERROR.
            id          = jsonObject:GetCharacter("id") NO-ERROR.
            cOrderBy    = jsonObject:GetCharacter("orderBy") NO-ERROR.               
            cWhere      = "WHERE " + ablFilter.
            
            IF cOrderBy &gt; "" THEN
            DO:                                
                cOrderBy = REPLACE(cOrderBy, ",", " by ").
                cOrderBy = "by " + cOrderBy + " ".                
                /* NOTE: id and seq fields should be removed from cWhere and cOrderBy */                
                cOrderBy = REPLACE(cOrderBy, "by id desc", "").
                cOrderBy = REPLACE(cOrderBy, "by id ", "").
                cOrderBy = REPLACE(cOrderBy, "by seq desc", "").
                cOrderBy = REPLACE(cOrderBy, "by seq ", "").
            END.                
            
            lUseReposition = iSkipRows &lt;&gt; ?.                                                 
        END.
        ELSE IF filter NE "" THEN
        DO:
            /* Use filter as WHERE clause */
            cWhere = "WHERE " + filter.            
        END.                                
                
        IF iMaxRows &lt;&gt; ? AND iMaxRows &gt; 0 THEN
        DO:
            BUFFER ttCustomer:HANDLE:BATCH-SIZE = iMaxRows.
        END.
        ELSE DO:
        IF id &gt; "" THEN
            BUFFER ttCustomer:HANDLE:BATCH-SIZE = 1.
        ELSE                                 
            BUFFER ttCustomer:HANDLE:BATCH-SIZE = 0.
        END.                        
        BUFFER ttCustomer:ATTACH-DATA-SOURCE(DATA-SOURCE srcCustomer:HANDLE).

        IF cOrderBy = ? THEN cOrderBy = "".
        cWhere = IF cWhere &gt; "" THEN (cWhere + " " + cOrderBy) ELSE ("WHERE " + cOrderBy).                     
        MESSAGE "DEBUG: cWhere: " cWhere.
        MESSAGE "DEBUG: cOrderBy: " cOrderBy.        
        DATA-SOURCE srcCustomer:FILL-WHERE-STRING = cWhere.
            
        IF lUseReposition THEN
        DO:
            hQuery = DATA-SOURCE srcCustomer:QUERY.
            hQuery:QUERY-OPEN.
            IF id &gt; "" AND id &lt;&gt; "?" THEN
            DO:
                hQuery:REPOSITION-TO-ROWID(TO-ROWID(id)).                
            END.                 
            ELSE IF iSkipRows &lt;&gt; ? AND iSkipRows &gt; 0 THEN
            DO:
                hQuery:REPOSITION-TO-ROW(iSkipRows).
                IF NOT AVAILABLE Customer THEN
                    hQuery:GET-NEXT () NO-ERROR.                
            END.                
            iCount = 0.                
            REPEAT WHILE NOT hQuery:QUERY-OFF-END AND iCount &lt; iMaxRows:
                hQuery:GET-NEXT () NO-ERROR.
                IF AVAILABLE Customer THEN
                DO:
                    CREATE ttCustomer.
                    BUFFER-COPY Customer TO ttCustomer.
                    ASSIGN  ttCustomer.id  = STRING(ROWID(Customer))
                            iSeq = iSeq + 1
                            ttCustomer.seq = iSeq.              
                END.   
                iCount = iCount + 1.                 
            END.                                 
        END.
        ELSE DO:
            IF id &gt; "" THEN DATA-SOURCE srcCustomer:RESTART-ROWID(1) = TO-ROWID ((id)).            
            BUFFER ttCustomer:SET-CALLBACK ("AFTER-ROW-FILL", "AddIdField").                                             
            DATASET dsCustomer:FILL().
        END.            
        FINALLY:
            BUFFER ttCustomer:DETACH-DATA-SOURCE().
        END FINALLY.
              
    END METHOD.
          
    METHOD PUBLIC VOID AddIdField (INPUT DATASET dsCustomer):        
        ASSIGN  ttCustomer.id = STRING(ROWID(Customer))
                iSeq = iSeq + 1
                ttCustomer.seq = iSeq.        
    END.    
          
    /*------------------------------------------------------------------------------
            Purpose: Create one or more new records                                                               
            Notes:                                                                        
    ------------------------------------------------------------------------------*/  
    @openapi.openedge.export(type="REST", useReturnValue="false", writeDataSetBeforeImage="true").
    @progress.service.resourceMapping(type="REST", operation="create", URI="", alias="", mediaType="application/json").
    METHOD PUBLIC VOID CreateCustomer(INPUT-OUTPUT DATASET dsCustomer):         
        DEFINE VAR hDataSet AS HANDLE NO-UNDO.
        hDataSet = DATASET dsCustomer:HANDLE.
       
        SUPER:CreateData(DATASET-HANDLE hDataSet BY-REFERENCE).        
    END METHOD.    
    
    /*------------------------------------------------------------------------------
            Purpose:  Update one or more records                                                                  
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
    @openapi.openedge.export(type="REST", useReturnValue="false", writeDataSetBeforeImage="true").
    @progress.service.resourceMapping(type="REST", operation="update", URI="", alias="", mediaType="application/json").
    METHOD PUBLIC VOID UpdateCustomer(INPUT-OUTPUT DATASET dsCustomer):         
    
        DEFINE VAR hDataSet AS HANDLE NO-UNDO.
        hDataSet = DATASET dsCustomer:HANDLE.
       
        SUPER:UpdateData(DATASET-HANDLE hDataSet BY-REFERENCE).          
    END METHOD.
    
    /*------------------------------------------------------------------------------
            Purpose:    Delete a record                                                               
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
    @openapi.openedge.export(type="REST", useReturnValue="false", writeDataSetBeforeImage="true").
    @progress.service.resourceMapping(type="REST", operation="delete", URI="", alias="", mediaType="application/json").
    METHOD PUBLIC VOID DeleteCustomer(INPUT-OUTPUT DATASET dsCustomer):                    
    
        DEFINE VAR hDataSet AS HANDLE NO-UNDO.
        hDataSet = DATASET dsCustomer:HANDLE.
       
        SUPER:DeleteData(DATASET-HANDLE hDataSet BY-REFERENCE).   
    END METHOD.
    
    /*------------------------------------------------------------------------------
            Purpose:    Submit a record                                                               
            Notes:                                                                        
    ------------------------------------------------------------------------------*/
    @openapi.openedge.export(type="REST", useReturnValue="false", writeDataSetBeforeImage="true").
    @progress.service.resourceMapping(type="REST", operation="submit", URI="/SubmitCustomer", alias="", mediaType="application/json").
    METHOD PUBLIC VOID SubmitCustomer(INPUT-OUTPUT DATASET dsCustomer):                    
    
        /* Calling extending class's CUD methods instead of SUPER:Submit() in case 
           customized functionality was added.
           Do deletes first, next modifies, and finally creates */
        THIS-OBJECT:DeleteCustomer(DATASET dsCustomer).
        THIS-OBJECT:UpdateCustomer(DATASET dsCustomer).
        THIS-OBJECT:CreateCustomer(DATASET dsCustomer).        
    END METHOD.
     
          
END CLASS.
</pre>
                                                <p>For information about sorting and grouping, see <a href="filtering openedge service objects by search criteria.htm#twh1552977199740" class="MCXref xref">Filtering OpenEdge Service objects by search criteria</a>.<div class="draft-comment">This topic is under
                revision.</div><div class="draft-comment">Implementing the pattern filter method in the Business Entity class file OpenEdge
                Business entities generated from Progress Developer Studio for OpenEdge 11.3 or
                earlier support READ operations based on a filter. In order to support sorting and
                filtering capabilities, you can modify the business entity to support JSON filter
                pattern. The JSON filter pattern method is a model or a pattern in which the ABL
                filter parameter of the READ operation is used as a JSON object (a string). This
                JSON object must be hard-coded to include additional parameters that are required
                for sorting and filtering.what are the additional parameters?</div></p>
                                            </div>
                                            <p id="return-to-top"><a href="#top"><img src="../xebresources/evbg/arrow_circle_up_24dp_1f1f1f_fill0_wght400_grad0_opsz24.png" /></a>
                                            </p>
                                        </div>
                                        <div class="topicnav-wrapper">
                                            <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbarProxy mc-component nocontent" style="mc-topic-toolbar-items: Back QuickSearch AddTopicToFavorites;">
                                                <div class="button-group-container-left">
                                                    <button class="button needs-pie previous-topic-button" title="Go back" disabled="true">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                    <button class="button needs-pie next-topic-button" title="See what's next" disabled="true">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                </div>
                                            </div>
                                            <br />
                                            <h4>In this topic</h4>
                                            <div class="sticky-container">
                                                <div data-sticky-container="" id="P0CV2RtnIUeYNk8xNCZt6Q">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="P0CV2RtnIUeYNk8xNCZt6Q:top" data-bottom-anchor="contentBody:bottom" data-scroll-container=".body-container" data-sticky-on="only screen and (min-width: 1201px)" data-scroll-container-on="only screen and (min-width: 1201px)">
                                                        <ul data-magellan="" data-animation-duration="250" data-active-class="selected" data-scroll-container=".body-container" data-scroll-container-on="only screen and (min-width: 1201px)" class="topicMenu menu _Skins_TopicMenuProxy mc-component">
                                                            <li class="tree-node"><a href="#Enablingsupportforfilteringoptionsandsorting">Enabling support for filtering options and sorting</a>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="home-footer">
                                        <table style="width: 100%;border-top-style: solid;border-top-width: 1px;border-top-color: #808080;">
                                            <col />
                                            <col />
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <p> </p>
                                                    </td>
                                                    <td style="text-align: left;">
                                                        <p>Content © 2025 Everbridge, Inc. All rights reserved. </p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>